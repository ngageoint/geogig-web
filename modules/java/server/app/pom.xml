<?xml version="1.0" encoding="ISO-8859-1"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.geogig.web</groupId>
    <artifactId>geogig-server</artifactId>
    <version>0.2-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>geogig-server-app</artifactId>
  <packaging>jar</packaging>
  <name>GeoGig Server Spring Boot App</name>



  <dependencies>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
    </dependency>
    <!-- <dependency> <groupId>com.sun.xml.bind</groupId> <artifactId>jaxb-impl</artifactId> <version>2.3.0</version> </dependency> 
      <dependency> <groupId>org.glassfish.jaxb</groupId> <artifactId>jaxb-runtime</artifactId> <version>2.3.0</version> </dependency> -->
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.geogig.web</groupId>
      <artifactId>geogig-server-config-service</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geogig.web</groupId>
      <artifactId>geogig-server-feature-service</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geogig.web</groupId>
      <artifactId>geogig-server-collaboration-service</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geogig.web</groupId>
      <artifactId>geogig-server-service-events</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geogig.web</groupId>
      <artifactId>geogig-server-service-stats</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geogig.web</groupId>
      <artifactId>geogig-server-presentation-service</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geogig.web</groupId>
      <artifactId>geogig-server-service-websockets</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.geogig.web</groupId>
      <artifactId>geogig-openapi-java-model</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geogig.web</groupId>
      <artifactId>geogig-openapi-java-server</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geogig.web</groupId>
      <artifactId>geogig-geotools-model-bridge</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.locationtech.geogig</groupId>
      <artifactId>geogig-core</artifactId>
      <version>${geogig.version}</version>
    </dependency>
    <dependency>
      <groupId>org.locationtech.geogig</groupId>
      <artifactId>geogig-remoting</artifactId>
      <version>${geogig.version}</version>
    </dependency>
    <dependency>
      <groupId>org.locationtech.geogig</groupId>
      <artifactId>geogig-datastore</artifactId>
      <version>${geogig.version}</version>
    </dependency>
    <dependency>
      <groupId>org.locationtech.geogig</groupId>
      <artifactId>geogig-rocksdb</artifactId>
      <version>${geogig.version}</version>
    </dependency>
    <dependency>
      <groupId>org.locationtech.geogig</groupId>
      <artifactId>geogig-postgres</artifactId>
      <version>${geogig.version}</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <!--Spring dependencies -->
    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <!--dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-websocket</artifactId> </dependency -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>


    <!-- <dependency> <groupId>org.springframework.security.oauth</groupId> <artifactId>spring-security-oauth2</artifactId> 
      <version>2.2.1.RELEASE</version> </dependency> -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- WebJars -->
    <!-- <dependency> <groupId>org.webjars</groupId> <artifactId>webjars-locator</artifactId> <version>0.32</version> </dependency> 
      <dependency> <groupId>org.webjars</groupId> <artifactId>js-cookie</artifactId> <version>2.1.0</version> </dependency> <dependency> 
      <groupId>org.webjars</groupId> <artifactId>sockjs-client</artifactId> <version>1.1.2</version> </dependency> <dependency> 
      <groupId>org.webjars</groupId> <artifactId>stomp-websocket</artifactId> <version>2.3.3-1</version> </dependency> <dependency> 
      <groupId>org.webjars</groupId> <artifactId>bootstrap</artifactId> <version>3.3.7-1</version> </dependency> <dependency> <groupId>org.webjars</groupId> 
      <artifactId>jquery</artifactId> <version>3.2.1</version> </dependency> -->
    <!--SpringFox dependencies -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>${springfox-version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>${springfox-version}</version>
    </dependency>

    <dependency>
      <!-- handles reading and writing of data encoded in Smile data format ("binary JSON") -->
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-smile</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>3.16.1</version>
    </dependency>

    <!-- Bean Validation API support -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <scope>provided</scope>
    </dependency>

  </dependencies>

  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Automatic-Module-Name>geogig.web.service.app</Automatic-Module-Name>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
            <configuration>
              <!--classifier>bin</classifier -->
              <attach>false</attach>  <!-- generate two artifacts: the original one and the executable counter part produced by the repackage goal. Only the original 
                one will be installed/deployed -->
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
